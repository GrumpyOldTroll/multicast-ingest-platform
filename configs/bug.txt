

2018/10/28 20:18:29 PIM: igmp_source_forward_start: (S,G)=(23.212.185.4,232.10.10.2) igmp_sock=16 oif=enx00000004c71c fwd=0
2018/10/28 20:18:29 PIM: Lookedup: 0x556760a5b6c0 for rp_info: 0x556760a5b5a0(224.0.0.0/4) Lock: 1
2018/10/28 20:18:29 PIM: pim_ecmp_nexthop_lookup: Looking up: 23.212.185.4(default), last lookup time: 93902492654912
2018/10/28 20:18:29 PIM: pim_ecmp_nexthop_lookup: found nhop 10.9.1.1 for addr 23.212.185.4 interface enp1s0(default) metric 0 dist 0
2018/10/28 20:18:29 PIM: pim_ecmp_fib_lookup_if_vif_index: found nexthop ifindex=2 (interface enp1s0(default)) for address 23.212.185.4
2018/10/28 20:18:29 PIM: igmp_source_forward_start: NHT (23.212.185.4,232.10.10.2) vif_source 23.212.185.4 vif_index:0 
2018/10/28 20:18:29 PIM: pimd/pim_zebra.c igmp_source_forward_start: could not find input interface for source 23.212.185.4




Some digging found that a pimreg vif is attempted if and only if you use "ip pim sm".  I added that to the interface configs, then got:

2018/10/28 21:36:31 PIM: pim_ecmp_nexthop_lookup: Looking up: 23.212.185.4(default), last lookup time: 94613049683328
2018/10/28 21:36:31 PIM: pim_ecmp_nexthop_lookup: found nhop 10.9.1.1 for addr 23.212.185.4 interface enp1s0(default) metric 0 dist 0
2018/10/28 21:36:31 PIM: pim_ecmp_fib_lookup_if_vif_index: found nexthop ifindex=2 (interface enp1s0(default)) for address 23.212.185.4
2018/10/28 21:36:31 PIM: igmp_source_forward_start: vif_index from fib:0
2018/10/28 21:36:31 PIM: igmp_source_forward_start: NHT (23.212.185.4,232.10.10.2) vif_source 23.212.185.4 vif_index:0 
2018/10/28 21:36:31 PIM: igmp_source_forward_start: ignoring request for looped MFC entry (S,G)=(23.212.185.4,232.10.10.2): igmp_sock=16 oif=enx00000004c71c vif_index=0
2018/10/28 21:36:37 PIM: pim_msg_send: to 224.0.0.13 on enx00000004c71c: msg_size=56 checksum=6aa3




looking a bit more, I see a disturbing setsockopt error at the top:

2018/10/28 21:29:07 PIM: pim_mroute_add_vif: Add Vif 0 (enp1s0[default])
2018/10/28 21:29:07 PIM: pim_mroute_add_vif: Add Vif 0 (pimreg[default])
2018/10/28 21:29:07 PIM: pim_mroute_add_vif: failure: setsockopt(fd=7,IPPROTO_IP,MRT_ADD_VIF,vif_index=0,ifaddr=*,flag=4): errno=98: Address in use
2018/10/28 21:29:07 PIM: pim_mroute_add_vif: Add Vif 0 (enx00000004c71c[default])
2018/10/28 21:29:07 PIM: pim_mroute_add_vif: failure: setsockopt(fd=7,IPPROTO_IP,MRT_ADD_VIF,vif_index=0,ifaddr=*,flag=4): errno=98: Address in use
2018/10/28 21:29:07 PIM: buffer_flush_available: write error on fd 2: Bad file descriptor
2018/10/28 21:29:07 PIM: buffer_flush_available: write error on fd 2: Bad file descriptor
2018/10/28 21:29:07 PIM: pim_zebra_if_add: docker0 index 5(0) flags 4099 metric 0 mtu 1500 operative 0
2018/10/28 21:29:07 PIM: pim_zebra_if_address_add: docker0(0) connected IP address 172.17.0.1/16 flags 0 primary




problem in pim_add_vif:

checking ifindex value:

        if (ifp->ifindex < 0) {
                zlog_warn("%s: ifindex=%d < 0 on interface %s",
                          __PRETTY_FUNCTION__, ifp->ifindex, ifp->name);
                return -2;
        }

        ifaddr = pim_ifp->primary_address;
        if (ifp->ifindex != PIM_OIF_PIM_REGISTER_VIF
            && PIM_INADDR_IS_ANY(ifaddr)) {
                zlog_warn(
                        "%s: could not get address for interface %s ifindex=%d",
                        __PRETTY_FUNCTION__, ifp->name, ifp->ifindex);
                return -4;
        } else {
                if (PIM_DEBUG_PIM_TRACE) {
                        char addr_str[INET_ADDRSTRLEN];
                        pim_inet4_dump("<addr?>", ifaddr, addr_str, sizeof(addr_str));
                        zlog_warn(
                                "%s: address for interface %s ifindex=%d, any=%d, primary_addr=%s",
                                __PRETTY_FUNCTION__, ifp->name, ifp->ifindex,
                                PIM_INADDR_IS_ANY(ifaddr), addr_str);
                }
        }


but ifindex value is 0 and never set, as stated in lib/if.h:

        /* Interface index (should be IFINDEX_INTERNAL for non-kernel or
           deleted interfaces).
           WARNING: the ifindex needs to be changed using the if_set_index()
           function. Failure to respect this will cause corruption in the data
           structure used to store the interfaces and if_lookup_by_index() will
           not work as expected.
         */
        ifindex_t ifindex;
#define IFINDEX_INTERNAL        0




To add to the confusion, IFINDEX_INTERNAL == PIM_OIF_PIM_REGISTER_VIF, so, uh, yeah.




